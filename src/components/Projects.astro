---
import ProjectCard from './ProjectCard.astro';
import ErrorBoundary from './ErrorBoundary.astro';
import { sanityFetch, queries } from '@/lib/sanity';
import { safeAsync, fallbackData } from '@/utils/errorHandling';
import type { Project } from '@/types/sanity';

const { id } = Astro.props;

// Fetch projects with error handling and fallback
const projects: Project[] = await safeAsync(
  () => sanityFetch<Project[]>(queries.projects),
  fallbackData.projects
);

// Log performance for monitoring
console.debug(`[Projects] Loaded ${projects.length} projects`);
---
<section id={id} class="projects-section">
    <header class="section-header">
        <h2 class="text-xl md:text-2xl font-bold text-mochawhite mb-2 text-center">Projets</h2>
        <div class="w-16 h-0.5 bg-indigo-400 mx-auto"></div>
    </header>

    {projects.length > 0 ? (
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 p-4" role="list">
            {projects.map((project) => (
                <div role="listitem">
                    <ProjectCard project={project} />
                </div>
            ))}
        </div>
    ) : (
        <ErrorBoundary
            fallback="Aucun projet disponible pour le moment."
            showDetails={false}
        />
    )}
</section>