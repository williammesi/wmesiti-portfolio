---
import Layout from '../layouts/Layout.astro';

const seoData = {
  title: "Page non trouvée - William's Portfolio",
  description: "La page que vous recherchez n'existe pas ou a été déplacée.",
  noindex: true,
};
---

<Layout {...seoData}>
  <div class="error-page">
    <div class="error-content">
      <!-- Animated 404 -->
      <div class="error-number">
        <span class="four">4</span>
        <span class="zero">0</span>
        <span class="four">4</span>
      </div>

      <!-- Error message -->
      <h1 class="error-title">Page non trouvée</h1>
      <p class="error-description">
        Désolé, la page que vous recherchez n'existe pas ou a été déplacée.
      </p>

      <!-- Navigation suggestions -->
      <div class="error-actions">
        <a href="/" class="primary-button">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <polyline points="9,22 9,12 15,12 15,22" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          Retour à l'accueil
        </a>

        <a href="/#projects" class="secondary-button">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          Voir mes projets
        </a>
      </div>

      <!-- Helpful links -->
      <div class="helpful-links">
        <h2 class="links-title">Pages populaires</h2>
        <nav class="links-nav" aria-label="Navigation vers les pages populaires">
          <a href="/#about" class="link-item">À propos</a>
          <a href="/#skills" class="link-item">Compétences</a>
          <a href="/#projects" class="link-item">Projets</a>
          <a href="/#experience" class="link-item">Expérience</a>
        </nav>
      </div>
    </div>

    <!-- Decorative background -->
    <div class="background-decoration" aria-hidden="true">
      <div class="floating-shape shape-1"></div>
      <div class="floating-shape shape-2"></div>
      <div class="floating-shape shape-3"></div>
    </div>
  </div>
</Layout>

<style>
  .error-page {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    position: relative;
    overflow: hidden;
  }

  .error-content {
    text-align: center;
    max-width: 600px;
    z-index: 1;
    position: relative;
  }

  /* Animated 404 number */
  .error-number {
    font-size: clamp(4rem, 15vw, 8rem);
    font-weight: 800;
    margin-bottom: 2rem;
    display: flex;
    justify-content: center;
    gap: 0.5rem;
  }

  .error-number span {
    display: inline-block;
    background: linear-gradient(45deg, #6366f1, #8b5cf6, #06b6d4);
    background-size: 200% 200%;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradientShift 3s ease-in-out infinite;
  }

  .error-number .four:first-child {
    animation-delay: 0s;
  }

  .error-number .zero {
    animation-delay: 0.5s;
  }

  .error-number .four:last-child {
    animation-delay: 1s;
  }

  @keyframes gradientShift {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  /* Error content */
  .error-title {
    font-size: clamp(1.5rem, 4vw, 2.5rem);
    font-weight: 700;
    color: #cdd6f4;
    margin-bottom: 1rem;
  }

  .error-description {
    font-size: 1.125rem;
    color: rgba(205, 214, 244, 0.8);
    margin-bottom: 3rem;
    line-height: 1.6;
  }

  /* Action buttons */
  .error-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-bottom: 3rem;
    flex-wrap: wrap;
  }

  .primary-button,
  .secondary-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.875rem 1.5rem;
    border-radius: 0.75rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.2s ease;
    font-size: 0.975rem;
  }

  .primary-button {
    background: linear-gradient(45deg, #6366f1, #8b5cf6);
    color: white;
    box-shadow: 0 4px 14px rgba(99, 102, 241, 0.3);
  }

  .primary-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(99, 102, 241, 0.4);
  }

  .secondary-button {
    background: rgba(255, 255, 255, 0.1);
    color: #cdd6f4;
    border: 1px solid rgba(205, 214, 244, 0.2);
    backdrop-filter: blur(10px);
  }

  .secondary-button:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
  }

  /* Helpful links */
  .helpful-links {
    margin-top: 2rem;
  }

  .links-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #cdd6f4;
    margin-bottom: 1.5rem;
  }

  .links-nav {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .link-item {
    color: rgba(205, 214, 244, 0.7);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
    position: relative;
  }

  .link-item:hover {
    color: #6366f1;
  }

  .link-item::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 0;
    height: 2px;
    background: #6366f1;
    transition: width 0.2s ease;
  }

  .link-item:hover::after {
    width: 100%;
  }

  /* Background decoration */
  .background-decoration {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0;
  }

  .floating-shape {
    position: absolute;
    border-radius: 50%;
    background: linear-gradient(45deg, rgba(99, 102, 241, 0.1), rgba(139, 92, 246, 0.1));
    animation: float 6s ease-in-out infinite;
  }

  .shape-1 {
    width: 200px;
    height: 200px;
    top: 10%;
    left: 10%;
    animation-delay: 0s;
  }

  .shape-2 {
    width: 150px;
    height: 150px;
    top: 70%;
    right: 10%;
    animation-delay: 2s;
  }

  .shape-3 {
    width: 100px;
    height: 100px;
    top: 50%;
    left: 80%;
    animation-delay: 4s;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    50% {
      transform: translateY(-20px) rotate(180deg);
    }
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .error-page {
      padding: 1rem;
    }

    .error-actions {
      flex-direction: column;
      align-items: center;
    }

    .primary-button,
    .secondary-button {
      width: 100%;
      max-width: 280px;
      justify-content: center;
    }

    .links-nav {
      flex-direction: column;
      gap: 1rem;
    }

    .floating-shape {
      opacity: 0.5;
    }

    .shape-1 {
      width: 100px;
      height: 100px;
    }

    .shape-2 {
      width: 80px;
      height: 80px;
    }

    .shape-3 {
      width: 60px;
      height: 60px;
    }
  }

  /* Accessibility improvements */
  @media (prefers-reduced-motion: reduce) {
    .error-number span,
    .floating-shape {
      animation: none;
    }

    .primary-button:hover,
    .secondary-button:hover {
      transform: none;
    }
  }

  /* High contrast mode */
  @media (prefers-contrast: high) {
    .primary-button {
      background: #000;
      border: 2px solid #fff;
    }

    .secondary-button {
      background: transparent;
      border: 2px solid #cdd6f4;
    }
  }
</style>

<script>
  // Add some interactive behavior
  document.addEventListener('DOMContentLoaded', () => {
    // Add hover effect to 404 numbers
    const numbers = document.querySelectorAll('.error-number span');

    numbers.forEach((number, index) => {
      number.addEventListener('mouseenter', () => {
        number.style.transform = 'scale(1.1) rotate(5deg)';
        number.style.transition = 'transform 0.2s ease';
      });

      number.addEventListener('mouseleave', () => {
        number.style.transform = 'scale(1) rotate(0deg)';
      });
    });

    // Track 404 page visit for analytics
    if (typeof gtag !== 'undefined') {
      gtag('event', 'page_view', {
        page_title: '404 - Page Not Found',
        page_location: window.location.href,
        custom_map: { custom_parameter: '404_error' }
      });
    }

    // Log for debugging in development
    if (!import.meta.env.PROD) {
      console.info('404 Page loaded:', {
        url: window.location.href,
        referrer: document.referrer,
        timestamp: new Date().toISOString()
      });
    }
  });
</script>